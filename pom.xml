<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.truthencode</groupId>
  <artifactId>toad-api</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>TOAD Api</name>
  <organization>
    <name>TruthEnCode</name>
    <url>http://toad.comlu.com</url>
  </organization>
  <description>The Oracle At DDO (web api and and main data store)</description>
  <properties>
    <node.version>v6.3.0</node.version>
    <npm.version>3.10.5</npm.version>
    <skip.tests>false</skip.tests>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <jvm.version>1.8</jvm.version>
    <min.jvm.version>[1.7,)</min.jvm.version>
    <max.jvm.version>1.8</max.jvm.version>
    <maven.compiler.source>${jvm.version}</maven.compiler.source>
    <maven.compiler.target>${jvm.version}</maven.compiler.target>
    <encoding>UTF-8</encoding>
    <!-- Clustering -->
    <hazelcast.version>3.6.2</hazelcast.version>
    <!-- vertx -->
    <vertx.version>3.3.2</vertx.version>
    <!-- Camel -->
    <camel.version>2.17.1</camel.version>
    <!-- Scala goodness -->
    <scala.base>2.11</scala.base>
    <scala.minor.version>8</scala.minor.version>
    <scala.version>${scala.base}.${scala.minor.version}</scala.version>
    <scala.tools.version>${scala.base}</scala.tools.version>
    <scala.logging.version>2.1.2</scala.logging.version>
    <scala.binary.full.version>${scala.version}</scala.binary.full.version>
    <scoverage.plugin.version>1.1.1</scoverage.plugin.version>
    <!--Logging-->
    <logback.version>1.1.7</logback.version>
    <slf4j.version>1.7.21</slf4j.version>
    <!-- Testing -->
    <scalatest.version>3.0.0-M15</scalatest.version>
    <!-- evosuite hosted at www.evosuite.org/m2 -->
    <evosuiteVersion>1.0.3</evosuiteVersion>
    <!-- Reporting -->
    <site.plugin.version>3.5.1</site.plugin.version>
    <project-info-reports.plugin.version>2.9</project-info-reports.plugin.version>
  </properties>
  <dependencies>
    <!-- On bintray but not central or repo -->
    <!-- <dependency> <groupId>oncue.knobs</groupId> <artifactId>core_2.10</artifactId>
      <version>3.8.1</version> <type>pom</type> </dependency> -->
    <!-- Clustering -->
    <dependency>
      <groupId>com.hazelcast</groupId>
      <artifactId>hazelcast</artifactId>
    </dependency>
    <!-- scala core -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-reflect</artifactId>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-actor_${scala.base}</artifactId>
    </dependency>
    <!--<dependency>-->
    <!--<groupId>org.mashupbots.socko</groupId>-->
    <!--<artifactId>socko-webserver_${scala.base}</artifactId>-->
    <!--</dependency>-->
    <dependency>
      <groupId>com.github.jeroenr</groupId>
      <artifactId>tepkin_${scala.base}</artifactId>
    </dependency>
    <!-- scalate for template processing -->
    <dependency>
      <groupId>org.scalatra.scalate</groupId>
      <artifactId>scalate-core_${scala.base}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.scalatra.scalate</groupId>
      <artifactId>scalate-test_${scala.base}</artifactId>
    </dependency>
    <!-- Uri builder -->
    <dependency>
      <groupId>com.netaporter</groupId>
      <artifactId>scala-uri_${scala.base}</artifactId>
    </dependency>
    <!-- web client -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Logging -->
    <dependency>
      <groupId>com.typesafe.scala-logging</groupId>
      <artifactId>scala-logging-slf4j_${scala.tools.version}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- Configuration -->
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.kxbmap</groupId>
      <artifactId>configs_${scala.base}</artifactId>
    </dependency>
    <!-- Testing -->
    <dependency>
      <groupId>org.evosuite</groupId>
      <artifactId>evosuite-standalone-runtime</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.tools.version}</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- vertx -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <scope>test</scope>
      <type>test-jar</type>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-mongo-client</artifactId>
    </dependency>
    <!-- Embedded used for local development -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-mongo-embedded-db</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-hazelcast</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-codegen</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-unit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-lang-js</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-auth-shiro</artifactId>
    </dependency>
    <!-- Auth -->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
    </dependency>
    <!-- <dependency>
       <groupId>io.vertx</groupId>
       <artifactId>vertx-lang-scala</artifactId>
     </dependency>
 <dependency>
       <groupId>io.vertx</groupId>
       <artifactId>vertx-service-factory</artifactId>
     </dependency>-->
    <!-- Camel routing -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-vertx</artifactId>
    </dependency>
    <!--<dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-websocket</artifactId>
      </dependency> -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-scala</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-hazelcast</artifactId>
    </dependency>
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.simplyscala</groupId>
      <artifactId>scalatest-embedmongo_${scala.base}</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <!-- Clustering -->
      <dependency>
        <groupId>com.hazelcast</groupId>
        <artifactId>hazelcast</artifactId>
        <version>${hazelcast.version}</version>
      </dependency>
      <!-- bytecode -->
      <!-- https://mvnrepository.com/artifact/org.javassist/javassist -->
      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>3.20.0-GA</version>
      </dependency>
      <!-- Scala / Java compat -->
      <!--<dependency>-->
      <!--<groupId>org.scala-lang.modules</groupId>-->
      <!--<artifactId>scala-java8-compat_2.11</artifactId>-->
      <!--<version>0.8.0-RC3</version>-->
      <!--</dependency>-->
      <!-- Vert.x -->
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-core</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-web</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-mongo-client</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-mongo-embedded-db</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-hazelcast</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-codegen</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-lang-scala</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-service-factory</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-unit</artifactId>
        <version>${vertx.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-core</artifactId>
        <scope>test</scope>
        <version>${vertx.version}</version>
        <type>test-jar</type>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-lang-js</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-auth-shiro</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <!-- Auth -->
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-core</artifactId>
        <version>1.2.6</version>
      </dependency>
      <!-- Camel routing -->
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-core</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-vertx</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-websocket</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-scala</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-hazelcast</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <!-- Scala -->
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.binary.full.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${scala.binary.full.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-compiler</artifactId>
        <version>${scala.binary.full.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-actor_${scala.base}</artifactId>
        <version>2.4.6</version>
      </dependency>
      <!-- WebSocket Friendly Server -->
      <dependency>
        <groupId>org.mashupbots.socko</groupId>
        <artifactId>socko-webserver_${scala.base}</artifactId>
        <version>0.6.0</version>
      </dependency>
      <!-- scalate -->
      <dependency>
        <groupId>org.scalatra.scalate</groupId>
        <artifactId>scalate-core_${scala.base}</artifactId>
        <version>1.7.1</version>
      </dependency>
      <dependency>
        <groupId>org.scalatra.scalate</groupId>
        <artifactId>scalate-test_${scala.base}</artifactId>
        <version>1.7.1</version>
        <scope>test</scope>
      </dependency>
      <!-- MongoDB Support / drivers -->
      <dependency>
        <groupId>com.github.jeroenr</groupId>
        <artifactId>tepkin_${scala.base}</artifactId>
        <version>0.7</version>
      </dependency>
      <dependency>
        <groupId>com.github.simplyscala</groupId>
        <artifactId>scalatest-embedmongo_${scala.base}</artifactId>
        <version>0.2.2</version>
        <scope>test</scope>
      </dependency>
      <!-- Uri builder -->
      <dependency>
        <groupId>com.netaporter</groupId>
        <artifactId>scala-uri_${scala.base}</artifactId>
        <version>0.4.14</version>
      </dependency>
      <!-- web client -->
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.2</version>
      </dependency>
      <!-- Logging -->
      <dependency>
        <groupId>com.typesafe.scala-logging</groupId>
        <artifactId>scala-logging-slf4j_${scala.tools.version}</artifactId>
        <version>${scala.logging.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <!-- Configuration -->
      <dependency>
        <groupId>com.typesafe</groupId>
        <artifactId>config</artifactId>
        <version>1.3.0</version>
      </dependency>
      <dependency>
        <groupId>com.github.kxbmap</groupId>
        <artifactId>configs_${scala.base}</artifactId>
        <version>0.4.2</version>
      </dependency>
      <!-- Testing -->
      <dependency>
        <groupId>org.evosuite</groupId>
        <artifactId>evosuite-standalone-runtime</artifactId>
        <version>${evosuiteVersion}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.tools.version}</artifactId>
        <version>${scalatest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/webapp</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/test/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Disable maven compiler -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- see http://davidb.github.com/scala-maven-plugin -->
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <configuration>
          <recompileMode>incremental</recompileMode>
          <target>${jvm.version}</target>
          <scalaCompatVersion>${scala.base}</scalaCompatVersion>
          <recompileMode>incremental</recompileMode>
          <useZincServer>true</useZincServer>
          <javacArgs>
            <javacArg>-deprecation</javacArg>
            <javacArg>-Xdoclint:all/protected</javacArg>
            <javacArg>-Xlint</javacArg>
          </javacArgs>
          <args>
            <!-- <arg>-make:transitive</arg> flag is deprecated in 2.11+ -->
            <!--<arg>-dependencyfile</arg>-->
            <arg>-deprecation</arg>
            <arg>-feature</arg>
            <arg>-Ywarn-unused</arg>
            <arg>-Xlint</arg>
            <arg>-Xdev</arg>
            <!-- <arg>-P:genjavadoc:out=${project.build.directory}/genjavadoc</arg> -->
            <!-- <arg>${project.build.directory}/.scala_dependencies</arg> -->
          </args>
          <!-- <compilerPlugins> <compilerPlugin> <groupId>com.typesafe.genjavadoc</groupId>
            <artifactId>genjavadoc-plugin_${scala.binary.full.version}</artifactId> <version>0.9</version>
            </compilerPlugin> </compilerPlugins> -->
          <compilerPlugins>
            <compilerPlugin>
              <groupId>com.lihaoyi</groupId>
              <artifactId>acyclic_${scala.base}</artifactId>
              <version>0.1.4</version>
            </compilerPlugin>
          </compilerPlugins>
        </configuration>
        <executions>
          <execution>
            <id>scala-compile</id>
            <!-- <phase>process-resources</phase> -->
            <goals>
              <!-- <goal>add-source</goal> -->
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile</id>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <!-- <phase>process-test-resources</phase> -->
            <phase>test-compile</phase>
            <configuration>
              <includes>
                <include>**/*Test.scala</include>
                <include>**/*IT.scala</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <id>java</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>io.truthencode.toad.JavaStart</mainClass>
            </configuration>
          </execution>
          <execution>
            <id>scala</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>io.truthencode.toad.Main</mainClass>
            </configuration>
          </execution>
        </executions>

      </plugin>
      <!-- disable surefire -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <!-- enable scalatest -->
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0</version>
        <dependencies>
          <dependency>
            <groupId>org.pegdown</groupId>
            <artifactId>pegdown</artifactId>
            <version>1.5.0</version>
          </dependency>
        </dependencies>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>WDF TestSuite.txt</filereports>
          <skipTests>${skip.tests}</skipTests>
        </configuration>
        <executions>
          <execution>
            <id>scala-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <suffixes>Test</suffixes>
            </configuration>
          </execution>
          <execution>
            <id>scala-integration-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
              <suffixes>IT</suffixes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.evosuite.plugins</groupId>
        <artifactId>evosuite-maven-plugin</artifactId>
      </plugin>
      <!-- Coverage / Intrumentation -->
      <plugin>
        <groupId>org.scoverage</groupId>
        <artifactId>scoverage-maven-plugin</artifactId>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
          <aggregate>true</aggregate>
          <highlighting>true</highlighting>
          <!-- other parameters -->
        </configuration>
        <!-- <executions>
           <execution>
             <id>instrument</id>
             <goals>
               <goal>test</goal>
             </goals>
             <phase>check</phase>
           </execution>
         </executions> -->
      </plugin>
      <!-- Package / Deployment -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>io.truthencode.toad.Main</Main-Class>
                    <Main-Verticle>io.truthencode.toad.verticle.MyFirstVerticle</Main-Verticle>
                  </manifestEntries>
                </transformer>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>reference.conf</resource>
                </transformer>
              </transformers>
              <artifactSet/>
              <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!-- Testing -->
        <plugin>
          <groupId>org.evosuite.plugins</groupId>
          <artifactId>evosuite-maven-plugin</artifactId>
          <version>${evosuiteVersion}</version>
          <executions>
            <execution>
              <goals>
                <goal>prepare</goal>
              </goals>
              <phase>process-test-classes</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.10</version>
        </plugin>
        <!-- Compilers -->
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
        </plugin>
        <!-- Scala Maven -->
        <plugin>
          <!-- see http://davidb.github.com/scala-maven-plugin -->
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.codehaus.mojo
                    </groupId>
                    <artifactId>
                      properties-maven-plugin
                    </artifactId>
                    <versionRange>
                      [1.0.0,)
                    </versionRange>
                    <goals>
                      <goal>
                        set-system-properties
                      </goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <!-- Reporting / Skinning -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${site.plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.skins</groupId>
              <artifactId>maven-fluido-skin</artifactId>
              <version>1.5</version>
            </dependency>
            <dependency>
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-markdown</artifactId>
              <version>1.7</version>
            </dependency>
          </dependencies>
          <configuration>
            <skipDeploy>true</skipDeploy>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>0.12</version>
          <executions>
            <execution>
              <goals>
                <goal>site</goal>
              </goals>
              <phase>site-deploy</phase>
              <configuration>
                <!-- The commit message -->
                <message>Building site for my project</message>
                <!-- The location where the site is uploaded -->
                <path>${project.version}</path>
                <merge>true</merge>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <message>Default Commit Message</message>
          </configuration>
        </plugin>
        <!--Reporting and Metrics -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.8.1</version>
        </plugin>
        <plugin>
          <groupId>org.scoverage</groupId>
          <artifactId>scoverage-maven-plugin</artifactId>
          <version>${scoverage.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>2.19.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar.plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>sonar</goal>
              </goals>
              <phase>verify</phase>
            </execution>
          </executions>
        </plugin>
        <!-- Versioning -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.4</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>javadoc</id>
      <build>
        <plugins>
          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>doc</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>compile</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <args>
                <arg>-P:genjavadoc:out=${project.build.directory}/genjavadoc</arg>
              </args>
              <compilerPlugins>
                <compilerPlugin>
                  <groupId>com.typesafe.genjavadoc</groupId>
                  <artifactId>genjavadoc-plugin_${scala.version}</artifactId>
                  <version>0.10</version>
                </compilerPlugin>
              </compilerPlugins>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${project.build.directory}/genjavadoc</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <minmemory>64m</minmemory>
              <maxmemory>2g</maxmemory>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <detectLinks>true</detectLinks>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>nodejs</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <!-- optional: you don't really need execution ids,
                but it looks nice in your build log. -->
                <id>install node and npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <!-- optional: default phase is "generate-resources" -->
                <phase>generate-resources</phase>
              </execution>
              <execution>
                <id>npm install</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <!-- Optional configuration which provides for running any npm command -->
                <configuration>
                  <arguments>install</arguments>
                </configuration>
              </execution>
              <execution>
                <id>npm update</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <!-- Optional configuration which provides for running any npm command -->
                <configuration>
                  <arguments>update</arguments>
                </configuration>
              </execution>
              <!--<execution>-->
              <!--<id>npm run build</id>-->
              <!--<goals>-->
              <!--<goal>npm</goal>-->
              <!--</goals>-->
              <!--<configuration>-->
              <!--<arguments>run build</arguments>-->
              <!--</configuration>-->
              <!--</execution>-->
              <execution>
                <id>bower install</id>
                <goals>
                  <goal>bower</goal>
                </goals>
              </execution>
              <execution>
                <id>jspm install</id>
                <goals>
                  <goal>jspm</goal>
                </goals>
                <configuration>
                  <arguments>--version</arguments>
                </configuration>
              </execution>
              <execution>
                <id>gulp build</id>
                <goals>
                  <goal>gulp</goal>
                </goals>
              </execution>
              <execution>
                <id>gulp copy fat jars</id>
                <goals>
                  <goal>gulp</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>
                  <arguments>copyJars</arguments>
                </configuration>
              </execution>
              <execution>
                <id>javascript tests</id>
                <phase>none</phase>
                <goals>
                  <goal>karma</goal>
                </goals>
                <configuration>
                  <karmaConfPath>src/test/javascript/karma.conf.ci.js</karmaConfPath>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <nodeVersion>${node.version}</nodeVersion>
              <npmVersion>${npm.version}</npmVersion>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>openshift</id>
      <activation>
        <property>
          <name>env.OPENSHIFT_DATA_DIR</name>
        </property>
      </activation>

    </profile>
    <profile>
      <!-- This profile is mutually exclusive of openshift, it sets local values
        for variables created and maintained on the openshift production server -->
      <id>localDev</id>
      <activation>
        <property>
          <name>!env.OPENSHIFT_DATA_DIR</name>
        </property>
      </activation>

    </profile>
  </profiles>
  <inceptionYear>2016</inceptionYear>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.6</version>
        <configuration>
          <linkXRef>true</linkXRef>
          <sourceEncoding>utf-8</sourceEncoding>
          <minimumTokens>100</minimumTokens>
          <targetJdk>${jvm.version}</targetJdk>
          <excludes>
            <exclude>**/*Bean.java</exclude>
            <exclude>**/generated/*.java</exclude>
          </excludes>
          <excludeRoots>
            <excludeRoot>target/generated-sources/stubs</excludeRoot>
          </excludeRoots>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <configuration>
          <args>
            <arg>-P:genjavadoc:out=${project.build.directory}/genjavadoc</arg>
          </args>
          <compilerPlugins>
            <compilerPlugin>
              <groupId>com.typesafe.genjavadoc</groupId>
              <artifactId>genjavadoc-plugin_${scala.version}</artifactId>
              <version>0.10</version>
            </compilerPlugin>
          </compilerPlugins>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scoverage</groupId>
        <artifactId>scoverage-maven-plugin</artifactId>
        <version>${scoverage.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.3</version>
        <reportSets>
          <reportSet>
            <id>aggregate</id>
            <reports>
              <report>aggregate</report>
            </reports>
            <inherited>false</inherited>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.2</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
  <pluginRepositories>
    <pluginRepository>
      <id>EvoSuite</id>
      <name>EvoSuite Repository</name>
      <url>http://www.evosuite.org/m2</url>
    </pluginRepository>
  </pluginRepositories>
  <repositories>
    <repository>
      <id>EvoSuite</id>
      <name>EvoSuite Repository</name>
      <url>http://www.evosuite.org/m2</url>
    </repository>
  </repositories>
</project>