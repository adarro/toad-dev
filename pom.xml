<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.truthencode</groupId>
	<artifactId>toad-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>TOAD Api</name>
	<organization>
		<name>TruthEnCode</name>
		<url>http://toad.comlu.com</url>
	</organization>
	<description>The Oracle At DDO (web api and and main data store)</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<jvm.version>1.8</jvm.version>
		<min.jvm.version>[1.7,)</min.jvm.version>
		<max.jvm.version>1.8</max.jvm.version>
		<maven.compiler.source>${jvm.version}</maven.compiler.source>
		<maven.compiler.target>${jvm.version}</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<!-- vertx -->
		<vertx.version>3.2.1</vertx.version>
		<!-- Scala goodness -->
		<scala.base>2.11</scala.base>
		<scala.minor.version>8</scala.minor.version>
		<scala.version>${scala.base}.${scala.minor.version}</scala.version>
		<scala.tools.version>${scala.base}</scala.tools.version>
		<scala.logging.version>2.1.2</scala.logging.version>
		<scala.binary.full.version>${scala.version}</scala.binary.full.version>
		<!-- Testing -->
		<scalatest.version>3.0.0-M15</scalatest.version>
		<testreplace>oldvalue</testreplace>
		<data.dir>${env.OPENSHIFT_DATA_DIR}</data.dir>
		<OPENSHIFT_DIY_IP />
		<OPENSHIFT_DIY_PORT />
		<OPENSHIFT_DATA_DIR>${env.OPENSHIFT_DATA_DIR}</OPENSHIFT_DATA_DIR>
		<HostName>localhost</HostName>
	</properties>
	<dependencies>
		<!-- On bintray but not central or repo -->
		<!-- <dependency> <groupId>oncue.knobs</groupId> <artifactId>core_2.10</artifactId> 
			<version>3.8.1</version> <type>pom</type> </dependency> -->
		<!-- scala core -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-reflect</artifactId>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-compiler</artifactId>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor_${scala.base}</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mashupbots.socko</groupId>
			<artifactId>socko-webserver_${scala.base}</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.jeroenr</groupId>
			<artifactId>tepkin_${scala.base}</artifactId>
		</dependency>
		<!-- scalate for template processing -->
		<dependency>
			<groupId>org.scalatra.scalate</groupId>
			<artifactId>scalate-core_${scala.base}</artifactId>
		</dependency>
		<dependency>
			<groupId>org.scalatra.scalate</groupId>
			<artifactId>scalate-test_${scala.base}</artifactId>
		</dependency>
		<!-- Uri builder -->
		<dependency>
			<groupId>com.netaporter</groupId>
			<artifactId>scala-uri_${scala.base}</artifactId>
		</dependency>
		<!-- web client -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Logging -->
		<dependency>
			<groupId>com.typesafe.scala-logging</groupId>
			<artifactId>scala-logging-slf4j_${scala.tools.version}</artifactId>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.tools.version}</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- vertx -->
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-mongo-client</artifactId>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-core</artifactId>
				<version>${vertx.version}</version>
			</dependency>
			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-web</artifactId>
				<version>${vertx.version}</version>
			</dependency>

			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-mongo-client</artifactId>
				<version>${vertx.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.binary.full.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-reflect</artifactId>
				<version>${scala.binary.full.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-compiler</artifactId>
				<version>${scala.binary.full.version}</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-actor_${scala.base}</artifactId>
				<version>2.4.6</version>
			</dependency>
			<dependency>
				<groupId>org.mashupbots.socko</groupId>
				<artifactId>socko-webserver_${scala.base}</artifactId>
				<version>0.6.0</version>
			</dependency>
			<!-- scalate -->
			<dependency>
				<groupId>org.scalatra.scalate</groupId>
				<artifactId>scalate-core_${scala.base}</artifactId>
				<version>1.7.1</version>
			</dependency>
			<dependency>
				<groupId>org.scalatra.scalate</groupId>
				<artifactId>scalate-test_${scala.base}</artifactId>
				<version>1.7.1</version>
				<scope>test</scope>
			</dependency>
			<!-- MongoDB Support / drivers -->
			<dependency>
				<groupId>com.github.jeroenr</groupId>
				<artifactId>tepkin_${scala.base}</artifactId>
				<version>0.7</version>
			</dependency>
			<!-- Uri builder -->
			<dependency>
				<groupId>com.netaporter</groupId>
				<artifactId>scala-uri_${scala.base}</artifactId>
				<version>0.4.14</version>
			</dependency>
			<!-- web client -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.2</version>
			</dependency>
			<!-- Logging -->
			<dependency>
				<groupId>com.typesafe.scala-logging</groupId>
				<artifactId>scala-logging-slf4j_${scala.tools.version}</artifactId>
				<version>${scala.logging.version}</version>
			</dependency>
			<!-- Testing -->
			<dependency>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest_${scala.tools.version}</artifactId>
				<version>${scalatest.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/webapp</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${jvm.version}</source>
					<target>${jvm.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<target>${jvm.version}</target>
					<scalaCompatVersion>${scala.base}</scalaCompatVersion>
					<!-- <recompileMode>incremental</recompileMode> -->
					<useZincServer>false</useZincServer>
					<args>
						<!-- <arg>-make:transitive</arg> flag is deprecated in 2.11+ -->
						<arg>-dependencyfile</arg>
						<arg>-deprecation</arg>
						<arg>-feature</arg>
						<arg>-Ywarn-unused</arg>
						<arg>-Xlint</arg>
						<!-- <arg>-P:genjavadoc:out=${project.build.directory}/genjavadoc</arg> -->
						<!-- <arg>${project.build.directory}/.scala_dependencies</arg> -->
					</args>
					<!-- <scalaVersion>${scala.base}</scalaVersion> -->
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>io.truthencode.toad.Main</mainClass>
				</configuration>
			</plugin>
			<!-- disable surefire -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<!-- enable scalatest -->
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>WDF TestSuite.txt</filereports>
				</configuration>
				<executions>
					<execution>
						<id>scala-test</id>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<suffixes>Test</suffixes>
						</configuration>
					</execution>
					<execution>
						<id>scala-integration-test</id>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>integration-test</phase>
						<configuration>
							<suffixes>IT</suffixes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>io.vertx.core.Launcher</Main-Class>
										<Main-Verticle>io.vertx.blog.first.MyFirstVerticle</Main-Verticle>
									</manifestEntries>
								</transformer>
							</transformers>
							<artifactSet />
							<outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											properties-maven-plugin
										</artifactId>
										<versionRange>
											[1.0.0,)
										</versionRange>
										<goals>
											<goal>
												set-system-properties
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>openshift</id>
			<activation>
				<property>
					<name>env.OPENSHIFT_DATA_DIR</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>1.0.0</version>
						<executions>
							<execution>
								<!-- any phase before your app deploys -->
								<!-- push OPENSHIFT variables to system properties -->
								<goals>
									<goal>set-system-properties</goal>
								</goals>
								<configuration>
									<properties>
										<property>
											<name>OPENSHIFT_DIY_IP</name>
											<value>${env.OPENSHIFT_DIY_IP}</value>
										</property>
										<property>
											<name>OPENSHIFT_DIY_PORT</name>
											<value>${env.OPENSHIFT_DIY_PORT}</value>
										</property>
										<property>
											<name>HostName</name>
											<value>toad-truthencode.rhcloud.com</value>
										</property>
									</properties>
								</configuration>
							</execution>
							<execution>
								<id>projectprops</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>write-project-properties</goal>
								</goals>
								<configuration>
									<outputFile>
										${project.build.outputDirectory}/app.properties
									</outputFile>
								</configuration>
							</execution>
							<execution>
								<id>projecttestprops</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>write-project-properties</goal>
								</goals>
								<configuration>
									<outputFile>
										${project.build.testOutputDirectory}/app.properties
									</outputFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- This profile is mutually exclusive of openshift, it sets local values 
				for variables created and maintained on the openshift production server -->
			<id>localDev</id>
			<activation>
				<property>
					<name>!env.OPENSHIFT_DATA_DIR</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>1.0.0</version>
						<executions>
							<execution>
								<!-- any phase before your app deploys -->
								<!-- <phase>test</phase> -->
								<id>preflight</id>
								<goals>
									<goal>set-system-properties</goal>
								</goals>
								<configuration>
									<properties>
										<property>
											<name>OPENSHIFT_DIY_IP</name>
											<value>127.0.0.1</value>
										</property>
										<property>
											<name>OPENSHIFT_DIY_PORT</name>
											<value>8888</value>
										</property>
										<property>
											<name>HostName</name>
											<value>localhost:8888</value>
										</property>
									</properties>
								</configuration>
							</execution>
							<execution>
								<id>projectprops</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>write-project-properties</goal>
								</goals>
								<configuration>
									<outputFile>
										${project.build.outputDirectory}/app.properties
									</outputFile>
								</configuration>
							</execution>
							<execution>
								<id>projecttestprops</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>write-project-properties</goal>
								</goals>
								<configuration>
									<outputFile>
										${project.build.testOutputDirectory}/app.properties
									</outputFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<inceptionYear>2016</inceptionYear>
</project>